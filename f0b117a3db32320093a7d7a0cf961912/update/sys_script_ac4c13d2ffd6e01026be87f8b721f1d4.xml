<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update OpsItem From Incident</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
 * @Deployable({
 *      table: 'sys_script',
 *      column: 'script',
 *      sysId: 'ac4c13d2ffd6e01026be87f8b721f1d4',
 *      metadata: {
 *          name: 'Update OpsItem From Incident',
 *          collection: 'incident',
 *          when: 'before',
 *          order: 100,
 *          action_update: 'true',
 *      }
 * })
 */
(function executeRule(current, previous /*null when async*/) {
    var incidentRepo = new IncidentRepo();
    if (incidentRepo.isUpdatedForOpsItem(current, previous)) {
        var opsItemGr = new GlideRecord('x_126749_aws_sc_opsitem');
        opsItemGr.addQuery('incident', '=', current.sys_id);
        opsItemGr.query();
        var opsItemRepo = new OpsItemRepo();
        while (opsItemGr.next()) {
            var isIncidentNowResolved = (current.getDisplayValue('state') === 'Resolved' &&
                previous.getDisplayValue('state') !== 'Resolved');
            opsItemRepo.updateFromProblemOrIncident(opsItemGr, current, isIncidentNowResolved);
        }
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-02-15 15:30:51</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ac4c13d2ffd6e01026be87f8b721f1d4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Update OpsItem From Incident</sys_name>
        <sys_overrides/>
        <sys_package display_value="AWS Service Management Connector - 4.7.7" source="x_126749_aws_sc">f0b117a3db32320093a7d7a0cf961912</sys_package>
        <sys_policy/>
        <sys_scope display_value="AWS Service Management Connector - 4.7.7">f0b117a3db32320093a7d7a0cf961912</sys_scope>
        <sys_update_name>sys_script_ac4c13d2ffd6e01026be87f8b721f1d4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-15 10:10:29</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ac4c13d2ffd6e01026be87f8b721f1d4"/>
</record_update>
