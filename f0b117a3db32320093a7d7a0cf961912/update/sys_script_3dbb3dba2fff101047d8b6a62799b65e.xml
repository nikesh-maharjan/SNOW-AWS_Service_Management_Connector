<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_126749_aws_sc_resource_type_account</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Prevent duplicate resource type accounts</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
 @Deployable({
    table: 'sys_script',
    column: 'script',
    sysId: '3dbb3dba2fff101047d8b6a62799b65e'
 })
 *
 */
/**
 * Avoid insertion of duplicate resource type accounts.
 * A  resource type account is considered duplicate when its table, region and reference to an account are the same.
 * @param current the current record in x_126749_aws_sc_resource_type_account
 * @param previous the previous record in x_126749_aws_sc_resource_type_account
 */
(function executeRule(current, previous) {
    // If the key, portfolio combination is found show an error and do not save
    var resourceTypeAccountGr = new GlideRecord('x_126749_aws_sc_resource_type_account');
    resourceTypeAccountGr.addQuery('table', '=', current.table);
    resourceTypeAccountGr.addQuery('awsaccount', '=', current.awsaccount);
    resourceTypeAccountGr.addQuery('awsregion', '=', current.awsregion);
    resourceTypeAccountGr.query();
    if (resourceTypeAccountGr.next() && resourceTypeAccountGr.sys_id.toString() !== current.sys_id.toString()) {
        current.setAbortAction(true);
        var account = current.awsaccount.getRefRecord();
        gs.addErrorMessage("The resource type corresponding to table " + current.table + " is already configured to sync with account " + account.awsname + " (" + account.awsaccountnumber + ") on region " + current.awsregion);
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-10-15 15:10:20</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3dbb3dba2fff101047d8b6a62799b65e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Prevent duplicate resource type accounts</sys_name>
        <sys_overrides/>
        <sys_package display_value="AWS Service Management Connector - 4.7.7" source="x_126749_aws_sc">f0b117a3db32320093a7d7a0cf961912</sys_package>
        <sys_policy/>
        <sys_scope display_value="AWS Service Management Connector - 4.7.7">f0b117a3db32320093a7d7a0cf961912</sys_scope>
        <sys_update_name>sys_script_3dbb3dba2fff101047d8b6a62799b65e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-15 10:10:29</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3dbb3dba2fff101047d8b6a62799b65e"/>
</record_update>
