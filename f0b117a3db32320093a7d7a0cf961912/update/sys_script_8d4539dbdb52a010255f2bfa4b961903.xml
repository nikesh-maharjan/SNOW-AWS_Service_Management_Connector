<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_126749_aws_sc_priority_lookup</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Set Priority Lookup Relationship</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
 @Deployable({
    table: 'sys_script',
    column: 'script',
    sysId: '8d4539dbdb52a010255f2bfa4b961903',
    metadata: {
        name: 'Set Priority Lookup Relationship',
        collection: 'x_126749_aws_sc_priority_lookup',
        when: 'before',
        order: '100',
        action_update: 'true',
        action_insert: 'true'
    }
 })
 */
(function executeRule(current, previous /*null when async*/) {
    if (current.awsrecordtype.toString() === 'SupportCase') {
        //only validation required is that both ServiceNow and AWS severities must have a value selected
        var awsSeverity = current.getValue('awssupportcaseseverity');
        var snowSeverity = current.getValue('awsservicenowsupportcaseseverity');
        if (awsSeverity === null || snowSeverity === null) {
            gs.addErrorMessage('Values must be selected for AWS Support Case Severity and ServiceNow Support Case Severity');
            current.setAbortAction(true);
        }
        else if (awsSeverity === "1") {
            gs.addInfoMessage('Creation of AWS Support Cases with severity "Business-critical system down" will fail unless you have an Enterprise Support plan.');
        }
        return;
    }
    if (current.awsrecordtype.toString() === 'Finding') {
        //Validate finding criticality fields
        var errors = false;
        var criticalityMax = current.getValue('awsfindingcriticalitymaximum');
        var criticalityMin = current.getValue('awsfindingcriticalityminimum');
        if (criticalityMax !== null && (parseInt(criticalityMax) > 100 || parseInt(criticalityMax) < 0)) {
            errors = true;
            gs.addErrorMessage('The value of Finding Criticality Maximum must be between 0 and 100');
        }
        if (criticalityMin !== null && (parseInt(criticalityMin) > 100 || parseInt(criticalityMin) < 0)) {
            errors = true;
            gs.addErrorMessage('The value of Finding Criticality Minimum must be between 0 and 100');
        }
        if (criticalityMin !== null && criticalityMax !== null && parseInt(criticalityMin) > parseInt(criticalityMax)) {
            errors = true;
            gs.addErrorMessage('The value of Finding Criticality Maximum should be higher than the value of Finding Criticality Minimum');
        }
        if (errors) {
            current.setAbortAction(true);
        }
    }
    if (current.awsprioritylookupvalue.toString() !== previous.awsprioritylookupvalue.toString()) {
        var tableName = Util.getDataLookupMatcherTable('Priority Lookup');
        if (tableName === null) {
            //we should also inform the user - although priority lookup will be broken everywhere.
            gs.error('Priority Lookup matcher table is not defined');
            return;
        }
        var priorityDataLookupGr = new GlideRecord(tableName);
        priorityDataLookupGr.addQuery('priority', current.getValue('awsprioritylookupvalue'));
        priorityDataLookupGr.orderBy('order');
        priorityDataLookupGr.query();
        if (priorityDataLookupGr.next()) {
            Util.setValue(current, 'awsprioritylookupreference', priorityDataLookupGr.sys_id.toString());
        }
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-02-18 10:44:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>8d4539dbdb52a010255f2bfa4b961903</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Set Priority Lookup Relationship</sys_name>
        <sys_overrides/>
        <sys_package display_value="AWS Service Management Connector - 4.7.7" source="x_126749_aws_sc">f0b117a3db32320093a7d7a0cf961912</sys_package>
        <sys_policy/>
        <sys_scope display_value="AWS Service Management Connector - 4.7.7">f0b117a3db32320093a7d7a0cf961912</sys_scope>
        <sys_update_name>sys_script_8d4539dbdb52a010255f2bfa4b961903</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-15 10:10:29</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=8d4539dbdb52a010255f2bfa4b961903"/>
</record_update>
