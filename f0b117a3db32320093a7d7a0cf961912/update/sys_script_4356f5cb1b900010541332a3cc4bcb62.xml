<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_126749_aws_sc_cmdb_ci_pp</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_126749_aws_sc_cmdb_ci_pp">awsproductstatusIN0,3^EQ<item display_value="0,3" endquery="false" field="awsproductstatus" goto="false" newquery="false" operator="IN" or="false" value="0,3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Add events and outputs as comments</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/**
 * Add the result of any action taken (provision, update or self-service action)
 * of a provisioned product (x_126749_aws_sc_cmdb_ci_pp table)
 * as a comment on the related requested item (sc_req_item table) when the
 * provisioned product status becomes PROVISIONED or ERROR.
 * @param current Provisioned Product record from x_126749_aws_sc_cmdb_ci_pp table
 * @param previous Provisioned Product record from x_126749_aws_sc_cmdb_ci_pp table
 */
// @Deployable({table: 'sys_script', column: 'script', sysId: '4356f5cb1b900010541332a3cc4bcb62'})
(function executeRule(current, previous) {
    // If the previous status is the same as current provisioned product status, we skip.
    if (!current || !previous || current.awsproductstatus === previous.awsproductstatus) {
        return;
    }
    // Add successful or error message, based on the current provisioned product status
    var comment = [];
    switch (current.awsproductstatus.toString()) {
        case 3 /* PROVISIONED */.toString():
            comment.push('<p>Successful execution.</p>');
            break;
        case 0 /* ERROR */.toString():
            comment.push("<p>Failed execution: " + current.awsstatusmessage + "</p>");
            break;
    }
    // Get outputs for the current provisioned product
    var outputs = [];
    var ppoGr = new GlideRecordSecure('x_126749_aws_sc_ppo');
    ppoGr.addQuery('awsppevent.awsrecordid', current.awslastrecordid);
    ppoGr.addQuery('awsppevent.awsproduct', current.sys_id);
    ppoGr.orderBy('awskey');
    ppoGr.query();
    while (ppoGr.next()) {
        outputs.push("<li><u>" + ppoGr.awskey + "</u>: <code>" + ppoGr.awsvalue + "</code></li>");
    }
    if (outputs.length > 0) {
        comment.push("Available outputs:<ul>" + outputs.join('') + "</ul>");
    }
    // Add comment to the requested item.
    if (comment.length > 0) {
        var riGr = new GlideRecord('sc_req_item');
        riGr.addQuery('configuration_item', '=', current.sys_id);
        riGr.query();
        if (riGr.next()) {
            riGr.comments = "[code]" + comment.join(' ') + "[/code]";
            riGr.update();
        }
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-10-09 14:20:06</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4356f5cb1b900010541332a3cc4bcb62</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Add events and outputs as comments</sys_name>
        <sys_overrides/>
        <sys_package display_value="AWS Service Management Connector - 4.7.7" source="x_126749_aws_sc">f0b117a3db32320093a7d7a0cf961912</sys_package>
        <sys_policy/>
        <sys_scope display_value="AWS Service Management Connector - 4.7.7">f0b117a3db32320093a7d7a0cf961912</sys_scope>
        <sys_update_name>sys_script_4356f5cb1b900010541332a3cc4bcb62</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-15 10:10:29</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=4356f5cb1b900010541332a3cc4bcb62"/>
</record_update>
