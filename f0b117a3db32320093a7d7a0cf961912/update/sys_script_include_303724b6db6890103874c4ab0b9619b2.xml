<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_126749_aws_sc.RdsResourceType</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>RdsResourceType</name>
        <script><![CDATA[var RdsResourceType = /** @class */ (function (_super) {
    Polyfill.__extends(RdsResourceType, _super);
    function RdsResourceType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RdsResourceType.prototype.rules = function () {
        return [{
                order: 20,
                syncType: ConfigSyncProvider.SYNC_DIR.FROM_AWS_CONFIG,
                externalResourceType: 'AWS::RDS::DBInstance',
                externalResourceId: 'resourceId',
                snTable: 'cmdb_ci_cloud_database',
                syncFromAws: this.syncFromAws,
            }];
    };
    RdsResourceType.prototype.fields = function () {
        return [{
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'name',
                transformFromAws: function (object, context) { return (context && context.resourceIdAsName) || !object.item.resourceName
                    ? object.item.resourceId : object.item.resourceName; }
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'operational_status',
                transformFromAws: function (object) { return object.data.dBInstanceStatus === "available"
                    ? 1
                    : object.data.dBInstanceStatus === undefined
                        ? 6
                        : 2; }
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'state',
                transformFromAws: function (object) { return object.data.dBInstanceStatus
                    ? object.data.dBInstanceStatus
                    : 'terminated'; }
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'terminated_on',
                awsField: 'item.resourceDeletionTime'
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'version',
                awsField: 'data.engineVersion'
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'type',
                awsField: 'data.engine'
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'tcp_port',
                awsField: 'data.endpoint.port'
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'category',
                awsField: 'data.dBInstanceClass'
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'fqdn',
                awsField: 'data.endpoint.address'
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'install_date',
                awsField: 'data.instanceCreateTime'
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'multi_az',
                awsField: 'data.multiAZ'
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'publicly_enabled',
                awsField: 'data.publiclyAccessible'
            }];
    };
    RdsResourceType.prototype.relationships = function () {
        return [
            {
                relationship: ConfigSyncProvider.RelationshipType.HostedOn,
                externalResourceType: 'AWS::Region',
                snTable: 'cmdb_ci_aws_datacenter',
                documentationOnly: true,
            }, {
                relationship: ConfigSyncProvider.RelationshipType.Contains,
                externalResourceType: 'Availability Zone',
                snTable: 'cmdb_ci_availability_zone',
                documentationOnly: true
            }
        ];
    };
    RdsResourceType.prototype.syncFromAwsAddRelationships = function (context, config, resourceSysId) {
        // Process relationships to AWS regions
        this.addHostedOnRegionRelationship(context, config, resourceSysId);
        // Process relationships to AWS Availability Zones
        this.processAwsAvailabilityZonesRelationships(context, config, resourceSysId);
        // Process a relationship to cluster and create a placeholder record
        if (config.data.hasOwnProperty("dBClusterIdentifier")) {
            var clusterId = this.getRdsClusterId(context, config);
            var getClusterRelationshipId = this.getRelationTypeSysId(ConfigSyncProvider.RelationshipType.ClusterOf);
			if(clusterId != undefined || clusterId!=null || clusterId!='')
            this.updateRelationship(clusterId, resourceSysId, getClusterRelationshipId);
        }
    };
    RdsResourceType.prototype.getRdsClusterId = function (context, config) {
        var clusterId = new GlideRecord('cmdb_ci_cloud_db_cluster');
        clusterId.addQuery('cluster_id', config.data.dBClusterIdentifier);
		clusterId.addQuery(gs.getProperty(C.sysprop.configDedupeDeleteFieldCorrelationId),'CONTAINS',config.item.accountId + ',' + config.item.awsRegion + ',' + 'AWS::RDS::DBCluster');
        clusterId.query();
        if (clusterId.next()) {
            return clusterId.sys_id;
        }
    };
    return RdsResourceType;
}(AbstractResourceType));
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-05-06 19:36:10</sys_created_on>
        <sys_id>303724b6db6890103874c4ab0b9619b2</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>RdsResourceType</sys_name>
        <sys_package display_value="AWS Service Management Connector - 4.7.7" source="x_126749_aws_sc">f0b117a3db32320093a7d7a0cf961912</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="AWS Service Management Connector - 4.7.7">f0b117a3db32320093a7d7a0cf961912</sys_scope>
        <sys_update_name>sys_script_include_303724b6db6890103874c4ab0b9619b2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-30 19:04:24</sys_updated_on>
    </sys_script_include>
</record_update>
