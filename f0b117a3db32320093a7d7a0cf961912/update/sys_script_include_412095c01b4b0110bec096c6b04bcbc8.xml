<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_126749_aws_sc.ApiGatewayV2ResourceType</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ApiGatewayV2ResourceType</name>
        <script><![CDATA[var ApiGatewayV2ResourceType = /** @class */ (function (_super) {
    Polyfill.__extends(ApiGatewayV2ResourceType, _super);
    function ApiGatewayV2ResourceType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ApiGatewayV2ResourceType.prototype.rules = function () {
        return [{
                order: 300,
                syncType: ConfigSyncProvider.SYNC_DIR.FROM_AWS_CONFIG,
                externalResourceType: 'AWS::ApiGatewayV2::Api',
                externalResourceId: 'resourceId',
                snTable: 'cmdb_ci_cloud_gateway',
                syncFromAws: this.syncFromAws,
            }];
    };
    ApiGatewayV2ResourceType.prototype.fields = function () {
        return [{
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'name',
                transformFromAws: function (object, context) { return (context && context.resourceIdAsName) || !object.data.name
                    ? object.item.resourceId : object.data.name; }
            }, {
                mode: ConfigSyncProvider.FieldMode.FromAws,
                snField: 'fqdn',
                transformFromAws: function (object) {
                    var regex = /[^//]*$/g;
                    var match = regex.exec(object.data.apiEndpoint || '');
                    return (match[0]);
                }
            }];
    };
    ApiGatewayV2ResourceType.prototype.relationships = function () {
        return [
            {
                relationship: ConfigSyncProvider.RelationshipType.HostedOn,
                externalResourceType: 'AWS::Region',
                snTable: 'cmdb_ci_aws_datacenter',
                documentationOnly: true,
            }
        ];
    };
    ApiGatewayV2ResourceType.prototype.syncFromAwsAddRelationships = function (context, config, resourceSysId) {
        // Process relationships to AWS regions
        this.addHostedOnRegionRelationship(context, config, resourceSysId);
    };
    // the payload from AWS Config for API gateway has a tag attribute within configuration all the time, which has the incorrect details.
    //tags that we want to process for API gateway is available within _config.item, hence setting as below
    ApiGatewayV2ResourceType.prototype.getResourceTags = function (_config) {
        return _config.item.tags || [];
    };
    return ApiGatewayV2ResourceType;
}(AbstractResourceType));
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>mjoethom</sys_created_by>
        <sys_created_on>2022-04-19 04:41:35</sys_created_on>
        <sys_id>412095c01b4b0110bec096c6b04bcbc8</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ApiGatewayV2ResourceType</sys_name>
        <sys_package display_value="AWS Service Management Connector - 4.7.7" source="x_126749_aws_sc">f0b117a3db32320093a7d7a0cf961912</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="AWS Service Management Connector - 4.7.7">f0b117a3db32320093a7d7a0cf961912</sys_scope>
        <sys_update_name>sys_script_include_412095c01b4b0110bec096c6b04bcbc8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-15 10:10:29</sys_updated_on>
    </sys_script_include>
</record_update>
